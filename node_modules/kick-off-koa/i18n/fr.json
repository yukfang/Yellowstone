{
  "title": "KICK OFF KOA",
  "subtitle" : "\u001b[23mSélectionnez un exercice et tapez \u001b[3mEnter\u001b[23m pour démarrer",
  "menu": {
    "credits": "CRÉDITS"
  },
  "common": {
    "exercise": {
      "fail": {
        "cannot_connect": "Connexion impossible au serveur %s (http://localhost:%s%s), options : %j. %s"
      },
      "server_type": {
        "submission": "de l’apprenant"
      }
    }
  },
  "exercise": {
    "HELLO_KOA": "BONJOUR KOA",
    "ROUTING": "ROUTAGE",
    "REQUEST_BODY": "CORPS DE LA REQUÊTE",
    "RESPONSE_BODY": "CORPS DE LA RÉPONSE",
    "CONTENT_HEADERS": "EN-TÊTES DU CONTENU",
    "MIDDLEWARE": "MIDDLEWARE",
    "ERROR_HANDLING": "GESTION DES ERREURS",
    "COOKIE": "COOKIE",
    "SESSION": "SESSION",
    "TEMPLATING": "GABARITS (TEMPLATING)",
    "AUTHENTICATION": "AUTHENTIFICATION"
  },
  "exercises": {
    "ROUTING": {
      "log_format": "corps de la réponse pour `%s` : %s"
    },
    "REQUEST_BODY": {
      "log_conversion": "conversion de `%s` en `%s`"
    },
    "RESPONSE_BODY": {
      "log_body": "corps de la réponse pour `%s` : %s",
      "log_ctype": "content-type renvoyé pour `%s` : %s",
      "log_encoding": "transfer-encoding renvoyé pour `%s` : %s"
    },
    "MIDDLEWARE": {
      "log_uppercase": "le middleware `upperCase` a converti le corps de la réponse en « %s »",
      "log_response_time": "le middleware `responseTime` a défini l’en-tête `X-Response-Time`"
    },
    "ERROR_HANDLING": {
      "log_body": "répond « %s » quand une requête est faite vers `%s`",
      "log_status": "répond avec un statut %d quand une requête est faite vers `%s`"
    },
    "COOKIE": {
      "fail.unset_cookie": "cookie.view non défini",
      "fail.set_unsigned": "ctx.cookies.set aurait dû être appelée avec options.signed = true",
      "fail.get_unsigned": "ctx.cookies.get aurait dû être appelée avec options.signed = true",
      "log.first_visit": "première visite : %s",
      "log.visit_again": "visite suivante : %s",
      "log.signed": "un cookie signé ne peut être falsifié",
      "output.one_view": "vu 1 fois"
    },
    "SESSION": {
      "log.first_visit": "première visite : %s",
      "log.visit_again": "visite suivante : %s",
      "log.new_user_visit": "visite d’un nouvel utilisateur : %s"
    },
    "AUTHENTICATION": {
      "fail.no_initial_401": "GET /       : la personne non authentifiée aurait dû recevoir une erreur 401, mais a reçu %d",
      "fail.no_auth_check": "POST /login : des identifiants incorrects devraient produire une erreur 400",
      "fail.no_login_redirect": "POST /login : la personne devrait être redirigée sur `/`",
      "fail.no_logout_redirect": "GET /logout : la personne devrait être redirigée sur `/login`",
      "fail.no_final_401": "GET /       : la personne déconnectée devrait recevoir une erreur 401",
      "log.initial_401": "GET /       : la personne non authentifiée reçoit une erreur 401",
      "log.auth_check": "POST /login : erreur 400 quand username ou password est incorrect",
      "log.login_redirect": "POST /login : connexion réussie",
      "log.logout_redirect": "GET /logout : la personne est redirigée vers `/login`",
      "log.final_401": "GET /       : la personne déconnectée reçoit une erreur 401"
    }
  }
}
